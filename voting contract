pragma solidity ^0.8.0;

contract VotingSystem {
    // Structure to store candidate details
    struct Candidate {
        uint id;
        string name;
        uint voteCount;
    }

    // Mapping to store candidates
    mapping(uint => Candidate) public candidates;

    // Mapping to store voter's choice
    mapping(address => bool) public voters;

    // Number of candidates
    uint public candidatesCount;

    // Constructor
    constructor() {
        addCandidate("Candidate 1");
        addCandidate("Candidate 2");
    }

    // Function to add a candidate
    function addCandidate(string memory _name) private {
        candidatesCount++;
        candidates[candidatesCount] = Candidate(candidatesCount, _name, 0);
    }

    // Function to vote for a candidate
    function vote(uint _candidateId) public {
        require(!voters[msg.sender], "You have already voted!");

        require(_candidateId > 0 && _candidateId <= candidatesCount, "Invalid candidate!");

        candidates[_candidateId].voteCount++;
        voters[msg.sender] = true;
    }
}
